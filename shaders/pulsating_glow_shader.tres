[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Time_Scale"

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "Amplitude"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "Intensity"

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[resource]
code = "shader_type canvas_item;
uniform float Intensity;
uniform float Time_Scale;
uniform float Amplitude;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:7
	float n_out7p0 = Intensity;

// Input:9
	float n_out9p0 = TIME;

// ScalarUniform:11
	float n_out11p0 = Time_Scale;

// ScalarOp:10
	float n_out10p0 = n_out9p0 * n_out11p0;

// ScalarFunc:8
	float n_out8p0 = sin(n_out10p0);

// ScalarUniform:12
	float n_out12p0 = Amplitude;

// ScalarOp:13
	float n_out13p0 = n_out8p0 * n_out12p0;

// ScalarOp:14
	float n_out14p0 = n_out7p0 - n_out13p0;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = vec3(n_out14p0) * n_out3p0;

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -449, -180.25 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 600, 160 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -60, 160 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 400, 80 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -60, 80 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -60, -120 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -460, -160 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( -260, -160 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( -460, -80 )
nodes/fragment/12/node = SubResource( 11 )
nodes/fragment/12/position = Vector2( -60, -40 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( 180, -100 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( 400, -100 )
nodes/fragment/connections = PoolIntArray( 3, 1, 0, 1, 3, 0, 5, 1, 5, 0, 0, 0, 9, 0, 10, 0, 11, 0, 10, 1, 10, 0, 8, 0, 8, 0, 13, 0, 12, 0, 13, 1, 13, 0, 14, 1, 7, 0, 14, 0, 14, 0, 5, 0 )
